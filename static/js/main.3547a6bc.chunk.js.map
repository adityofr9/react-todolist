{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","className","placeholder","onChange","name","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","key","type","TodoList","setTodos","test","newTodos","console","log","updatedTodos","removedArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3547a6bc.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className='todo-form'>\n      {props.edit ? (\n        <>\n          <input\n            placeholder='Update your item'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            ref={inputRef}\n            className='todo-input edit'\n          />\n          <button onClick={handleSubmit} className='todo-button edit'>\n            Update\n          </button>\n        </>\n      ) : (\n        <>\n          <input\n            placeholder='Add a todo'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            className='todo-input'\n            ref={inputRef}\n          />\n          <button onClick={handleSubmit} className='todo-button'>\n            Add todo\n          </button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\n\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\",\n  });\n\n  const submitUpdate = (value) => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: \"\",\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"} key={index}>\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className=\"icons\">\n        <input type=\"checkbox\" className=\"complete-task\" />\n        <RiCloseCircleLine onClick={() => removeTodo(todo.id)} className=\"delete-icon\" />\n        <TiEdit onClick={() => setEdit({ id: todo.id, value: todo.text })} className=\"edit-icon\" />\n      </div>\n    </div>\n  ));\n};\n\nexport default Todo;\n","import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = (todo) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos((prev) => prev.map((item) => (item.id === todoId ? newValue : item)));\n  };\n\n  const removeTodo = (id) => {\n    const removedArr = [...todos].filter((todo) => todo.id !== id);\n\n    setTodos(removedArr);\n  };\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <>\n      <h1>Your To Do List</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo} />\n    </>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className='todo-app'>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}